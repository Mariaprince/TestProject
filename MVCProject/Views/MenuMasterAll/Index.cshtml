@model MVCProject.Models.MenuMasterViewModels
@{
    ViewBag.Title = "Menu Master";
    //ViewBag.SubTitle = "List";
}

<div class="container">
    @*<h2>Role Record</h2>*@
    <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#myModal" onclick="clearTextBox();">Add New Menu</button><br /><br />
    <table class="table table-bordered table-hover">
        <thead>
            <tr>
                <th>
                    Menu Id
                </th>
                <th>
                    Menu Name
                </th>
                <th>
                    Menu Url
                </th>
                <th>
                    Parent Id
                </th>
                <th>
                    Action
                </th>
            </tr>
        </thead>
        <tbody class="tbody"></tbody>
    </table>
</div>
<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    @*<button type="button" class="close" data-dissmiss="modal"><span aria-hidden="true">×</span></button>*@
                    <button type="button" class="close" data-dismiss="modal">×</button>
                    <h4 class="modal-title" id="myModalLabel">Add Menu</h4>
                </div>
                <div class="modal-body">
                    @Html.HiddenFor(model => model.MenuId)
                    <div class="form-group">
                        @Html.LabelFor(model => model.MenuName, "Menu Name", htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.MenuName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.MenuName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <br />&nbsp;
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.MenuUrl, "Menu Url", htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.MenuUrl, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.MenuUrl, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <br />&nbsp;
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.MenuParentId, "Parent Id", htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.MenuParentId, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.MenuParentId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <br />&nbsp;
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" id="btnAdd" onclick="return Add();">Add</button>
                    <button type="button" class="btn btn-primary" id="btnUpdate" style="display:none;" onclick="Update();">Update</button>
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    }
</div>


@section Scripts
{
    <script src="~/Scripts/MenuMaster/MenuMaster.js"></script>
}