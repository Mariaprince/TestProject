@model MVCProject.Models.RoleMenuMappingViewModels
@{
    ViewBag.Title = "Role Menu Mapping";
    ViewBag.SubTitle = "List";
}

<div class="container">
    <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#myModal" onclick="clearTextBox();">Add New Role Menu</button><br /><br />
    <table class="table table-bordered table-hover">
        <thead>
            <tr>
                <th>
                    Mapping Id
                </th>
                <th>
                    Role Name
                </th>
                <th>
                    Menu Name
                </th>
                <th>
                    Action
                </th>
            </tr>
        </thead>
        <tbody class="tbody"></tbody>
    </table>
</div>
<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    @*<button type="button" class="close" data-dissmiss="modal"><span aria-hidden="true">×</span></button>*@
                    <button type="button" class="close" data-dismiss="modal">×</button>
                    <h4 class="modal-title" id="myModalLabel">Add Mapping</h4>
                </div>
                <div class="modal-body">
                    <div class="form-group">
                        @Html.LabelFor(model => model.RoleId, "Role Name", htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.HiddenFor(model => model.RMId)
                            @Html.HiddenFor(model => model.MenuId)
                            @Html.DropDownListFor(model => model.RoleId, new SelectList(ViewBag.Uroles, "RoleId", "RoleName"), null, new { @class = "form-control" })
                            @*@Html.EditorFor(model => model, new { htmlAttributes = new { @class = "form-control" } })*@
                            @Html.ValidationMessageFor(model => model.RoleId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <br />&nbsp;
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.MenuId, "Menu Name", htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.ListBoxFor(m => m.MenuIds, Model.Menu, new { @class = "listbox" })
                        </div>
                    </div>
                    <div class="form-group">
                        <br />&nbsp;
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" id="btnAdd" onclick="return Add();">Add</button>
                    <button type="button" class="btn btn-primary" id="btnUpdate" style="display:none;" onclick="Update();">Update</button>
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    }
</div>


@section Scripts
{
    <link href="http://cdn.rawgit.com/davidstutz/bootstrap-multiselect/master/dist/css/bootstrap-multiselect.css" rel="stylesheet" type="text/css" />
    <script src="http://cdn.rawgit.com/davidstutz/bootstrap-multiselect/master/dist/js/bootstrap-multiselect.js" type="text/javascript"></script>
    <script type="text/javascript">
                $(function () {
                    $('.listbox').multiselect({
                        includeSelectAllOption: true
                    });
                });
    </script>
    <script src="~/Scripts/RoleMenuMapping/RoleMenuMapping.js"></script>
}